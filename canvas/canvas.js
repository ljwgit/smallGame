 var texts = [		'温暖',		'珍惜',		'前行',		'努力',		// '减肥',		// '温暖',		// '珍惜',		// '前行',		// '努力',		// '减肥',	];var texts;var image = $.cookie('image');var nickname = $.cookie('nickname');var percent = parseInt(Math.random()*35+60);var settings = {	"bgImage" : 'canvas/images/keywordDivBg.png',	"userImage" : image,	//用户头像	"title":'恭喜你'+nickname+'，共收集到了&total&个温暖关键词，已超过了全国'+percent+'%的网友，将获得机会在中央电视台综艺频道2016年12月31日晚10点的《温暖2016》节目中登录虚拟观众席',	"QRcode": 'canvas/images/smallGame.png',	"logo" : "canvas/images/logo.png"}var DrawCanvas = function(){	texts = getRet();	this.canvas = document.getElementById("keyMapCanvas");	this.ctx = this.canvas.getContext('2d');	this.imgs = [];	this.curHeight = 0;	this.init();	this.curHeight = this.drawTitle();	this.loadImages();}DrawCanvas.prototype = {	init: function(){		this.ctx.width = window.innerWidth * 0.92;		this.ctx.height = screen.height * .75;		this.canvas.width = this.ctx.width;		this.canvas.height = this.ctx.height;		this.ratiox = 1/690*this.ctx.width;		this.ratioy = 1/1013*this.ctx.height;	},	drawTitle: function(){ 		var self = this;		this.ctx.globalCompositeOperation="destination-over";		//设置字体样式		var fontsize = this.ctx.width * 35 / 690; 	    this.ctx.font = fontsize + 'px ' + 'Microsoft YaHei';	    //设置字体填充颜色	    this.ctx.fillStyle = "#fff";	    //从坐标点(50,50)开始绘制文字	    var total = settings.title.replace(/&total&/, texts.length); //总人数	    var text_width = parseInt(this.ctx.width * 44 / 375); //console.log(text_width)	    return this.wrapText(total, convert(15), convert(25), self.ctx.width*.92, convert(25));	    function convert(x){	    	return self.ctx.width * x / 375;	    }	},	loadImages: function(){		var self = this;		this.userImg = new Image();		this.bgImg = new Image();		this.qr = new Image();		this.logo = new Image();		this.userImg.src = settings.userImage;		this.bgImg.src = settings.bgImage;		this.logo.src = settings.logo;		self.userImg.width = self.canvas.width*.2;		self.userImg.height = self.userImg.width;		self.userImg.style.borderRadius = self.userImg.height + 'px';		//QRcode		self.qr.src = settings.QRcode;		self.qr.width = 166 / 690 * self.ctx.width;		self.qr.height = 161 / 1013 * self.ctx.height;		//logo		self.logo.src = settings.logo;		self.logo.width = 142 / 690 * self.ctx.width;		self.logo.height = 246 / 1013 * self.ctx.height;		var images = [this.userImg, this.bgImg, this.qr,this.logo];		var imageCount = images.length;		var imagesLoaded = 0;		for(var i=0; i<imageCount; i++){		    images[i].onload = function(){		    			        imagesLoaded++;		        if(imagesLoaded == imageCount){		            allLoaded();		        }		    }		}		function allLoaded(){			//console.log('Image loaded done');			//set canvas background image		    self.canvas = self.convertImageToCanvas(self.bgImg, 0, 0, self.ctx.width, self.ctx.height);		    self.ctx.globalCompositeOperation="source-over";		    //circle area starts from		    var startX = 79 * self.ratiox;		    var startY = 269 * self.ratioy;		    var width = 540 * self.ratiox;		    var height = 483 * self.ratioy;		    //set user image 		    var centerX = startX + width / 2 //- self.userImg.width / 2;		    var centerY = startY + height / 2; //- self.userImg.height / 2;		    self.ctx.round(self.userImg, centerX, centerY, self.userImg.width, self.userImg.height); 			//set text words			self.drawText(startX, startY, width, height); 			//set qrcode			self.canvas = self.convertImageToCanvas(self.qr, 31 * self.ratiox, 832 * self.ratioy, 166 * self.ratiox, 161 * self.ratioy);		    self.ctx.globalCompositeOperation="source-over";			//set logo			self.canvas = self.convertImageToCanvas(self.logo, 31 * self.ratiox, 832 * self.ratioy, 142 * self.ratiox, 246 * self.ratioy);		    self.ctx.globalCompositeOperation="source-over";		    //convert canvas to image			var result = self.convertCanvasToImage(self.canvas);			$('#img1').attr('src', result.src); 		}	},	// Converts image to canvas; returns new canvas element	convertImageToCanvas: function(image, x, y, width, height) {		this.ctx.drawImage(image, x, y, width, height);		return this.ctx;	},	drawText: function(sx, sy, w, h){//startX, startY		var self = this;		var radius = (h < w ? h : w)/2 - 25;		var sRadius = self.userImg.width > self.userImg.height ? self.userImg.height : self.userImg.width;		var dis = (radius - sRadius)/4;		var addSum = sRadius + dis;		var phi = 0, theta = 0;		var max = texts.length > 10 ? 10 : texts.length;		var randomArr = [];		var centerX = w/2;		var centerY = h/2;		function getRandomPoint(radius, i) {			var offset;			var angle = 45/180*Math.PI + (360 / max) / 180 * Math.PI * i;			if( i % 2 == 0){				offset = -3 * i;			}else{				offset = 1 * i;			}			var randRadius = radius + offset;			var randX = centerX + randRadius * Math.cos(angle);			var randY = centerY + randRadius * Math.sin(angle);			return { //(0.4 + 1/max*i)		        x: randX,		        y: randY		    };		}		for(var i=1; i<max+1; i++){			var point = getRandomPoint(radius, i);	        var offset = {	        	x: point.x,//50控制圆心左右            	y: point.y //50控制圆心上下开口	        };			self.ctx.font = "18px Microsoft YaHei";		    //设置字体填充颜色		    self.ctx.fillStyle = "#fff";		    //从坐标点(50,50)开始绘制文字		    self.ctx.fillText(texts[i-1], offset.x+sx, offset.y+sy);		}	},	// Converts canvas to an image	convertCanvasToImage: function(canvas){		var img = new Image();		img.src = document.getElementById("keyMapCanvas").toDataURL("image/png");		return img;	},	wrapText: function(text, x, y, maxWidth, lineHeight) {		var words = text.split('');		var line = '';		var context = this.ctx;		var height;		for(var n = 0; n < words.length; n++) {			var testLine = line + words[n] + '';			var metrics = context.measureText(testLine);			var testWidth = metrics.width;			if (testWidth > maxWidth && n > 0) {				context.fillText(line, x, y);				line = words[n];				y += lineHeight;			}			else {				line = testLine;			}			height += lineHeight;		}		context.fillText(line, x, y);		return height;	}}//圆角矩形CanvasRenderingContext2D.prototype.round = function (img, x, y, w, h) {     var min_size = Math.min(w, h);    // if (r > min_size / 2)     var	r = min_size / 2;        this.save();//保存当前状态    this.beginPath();//开始一个新的绘制路径    //设置弧线的颜色为蓝色    this.strokeStyle = "rgba(0, 0, 0, .4)";    this.lineWidth = 5;    var circle = {        x : x,    //圆心的x轴坐标值        y : y,    //圆心的y轴坐标值        r : r     //圆的半径    };    this.arc(circle.x, circle.y, circle.r, 0, Math.PI * 2, true); //绘制圆形            this.closePath();    this.clip();//变成clip    this.drawImage(img, x-w/2, y-h/2, w, h);//画图    this.restore();//恢复保存，主要为了clip    return this;}